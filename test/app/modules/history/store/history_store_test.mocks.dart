// Mocks generated by Mockito 5.0.10 from annotations
// in estacionamento_joao/test/app/modules/history/store/history_store_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:estacionamento_joao/app/core/models/vehicle_entry_model.dart'
    as _i4;
import 'package:estacionamento_joao/app/core/services/interface_storage_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [InterfaceStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockInterfaceStorageService extends _i1.Mock
    implements _i2.InterfaceStorageService {
  MockInterfaceStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.VehicleEntryModel>> getAllEntries() =>
      (super.noSuchMethod(Invocation.method(#getAllEntries, []),
              returnValue: Future<List<_i4.VehicleEntryModel>>.value(
                  <_i4.VehicleEntryModel>[]))
          as _i3.Future<List<_i4.VehicleEntryModel>>);
  @override
  _i3.Future<List<_i4.VehicleEntryModel>> getActiveEntries() =>
      (super.noSuchMethod(Invocation.method(#getActiveEntries, []),
              returnValue: Future<List<_i4.VehicleEntryModel>>.value(
                  <_i4.VehicleEntryModel>[]))
          as _i3.Future<List<_i4.VehicleEntryModel>>);
  @override
  _i3.Future<bool> insertEntry(_i4.VehicleEntryModel? model) =>
      (super.noSuchMethod(Invocation.method(#insertEntry, [model]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> updateEntry(_i4.VehicleEntryModel? model) =>
      (super.noSuchMethod(Invocation.method(#updateEntry, [model]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<void> initDB() =>
      (super.noSuchMethod(Invocation.method(#initDB, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
